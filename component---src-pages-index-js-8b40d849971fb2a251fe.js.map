{"version":3,"sources":["webpack:///./src/components/postThumb.js","webpack:///./src/pages/index.js"],"names":["PostThumb","title","subtitle","thumbnail","link","featuredImgFluid","childImageSharp","fluid","className","onClick","navigate","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","map","post","frontmatter","description","fields","slug"],"mappings":"0OAgBeA,EAZG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC3CC,EAAmBF,EAAUG,gBAAgBC,MAEjD,OACE,yBAAKC,UAAU,sBAAsBC,QAAS,kBAAMC,mBAASN,KAC3D,kBAAC,IAAD,CAAKG,MAAOF,IACZ,uBAAGG,UAAU,mBAAmBP,GAChC,2BAAIC,KCsEGS,GAFEC,UAvEG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBhB,QAAxB,QACZiB,EAAQL,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQP,SAAUA,EAAUb,MAAOc,GACjC,kBAAC,IAAD,CAAKd,MAAM,aACX,kBAAC,IAAD,MACA,yLAUJ,kBAAC,IAAD,CAAQa,SAAUA,EAAUb,MAAOc,GACjC,kBAAC,IAAD,CAAKd,MAAM,SAEX,yBAAKO,UAAU,qBACZU,EAAMI,KAAI,SAAAC,GACT,OACE,kBAAC,EAAD,CACEtB,MAAOsB,EAAKC,YAAYvB,MACxBC,SAAUqB,EAAKC,YAAYC,YAC3BtB,UAAWoB,EAAKC,YAAYrB,UAC5BC,KAAMmB,EAAKG,OAAOC,aA4CV","file":"component---src-pages-index-js-8b40d849971fb2a251fe.js","sourcesContent":["import React from \"react\"\nimport { navigate } from \"gatsby\";\nimport Img from \"gatsby-image\"\n\nconst PostThumb = ({ title, subtitle, thumbnail, link }) => {\n  let featuredImgFluid = thumbnail.childImageSharp.fluid;\n\n  return (\n    <div className=\"postthumb-container\" onClick={() => navigate(link)}>\n      <Img fluid={featuredImgFluid} />\n      <p className=\"postthumb-title\">{title}</p>\n      <p>{subtitle}</p>\n    </div>\n  )\n}\n\nexport default PostThumb\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostThumb from \"../components/postThumb\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"nuwanwre\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      {/* <Bio /> */}\n      <div className=\"postthumb-wrapper\">\n        {posts.map(post => {\n          return (\n            <PostThumb\n              title={post.frontmatter.title}\n              subtitle={post.frontmatter.description}\n              thumbnail={post.frontmatter.thumbnail}\n              link={post.fields.slug}\n            />\n          )\n        })}\n      </div>\n\n      {/* <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol> */}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}