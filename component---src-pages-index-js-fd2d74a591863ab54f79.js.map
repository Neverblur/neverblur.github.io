{"version":3,"sources":["webpack:///./src/components/postThumb.js","webpack:///./src/components/pinnedPost.js","webpack:///./src/pages/index.js"],"names":["PostThumb","title","subtitle","thumbnail","link","tag","featuredImgFluid","childImageSharp","fluid","className","onClick","navigate","PinnedPost","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","pinnedPost","filter","p","frontmatter","pin","recentPosts","length","description","fields","slug","map","post"],"mappings":"+QAiBeA,EAbG,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACjDC,EAAmBH,EAAUI,gBAAgBC,MAEjD,OACE,yBAAKC,UAAU,sBAAsBC,QAAS,kBAAMC,mBAASP,KAC3D,kBAAC,IAAD,CAAKI,MAAOF,IACZ,uBAAGG,UAAU,YAAb,IAA0BJ,GAC1B,uBAAGI,UAAU,mBAAmBR,GAChC,uBAAGQ,UAAU,sBAAsBP,KCK1BU,EAbI,SAAC,GAA+C,IAA7CX,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAClDC,EAAmBH,EAAUI,gBAAgBC,MAEjD,OACE,yBAAKC,UAAU,uBAAuBC,QAAS,kBAAMC,mBAASP,KAC5D,kBAAC,IAAD,CAAKI,MAAOF,IACZ,uBAAGG,UAAU,YAAb,IAA0BJ,GAC1B,uBAAGI,UAAU,mBAAmBR,GAChC,uBAAGQ,UAAU,sBAAsBP,KCgE5BW,GAFEC,UAhEG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBlB,QAAxB,QACZmB,EAAQL,EAAKM,kBAAkBC,MAE/BC,EAAaH,EAAMI,QAAO,SAAAC,GAAC,OAAIA,EAAEC,YAAYC,OAC7CC,EAAcR,EAAMI,QAAO,SAAAC,GAAC,OAA0B,IAAtBA,EAAEC,YAAYC,OAEpD,OAAqB,IAAjBP,EAAMS,OAEN,kBAAC,IAAD,CAAQb,SAAUA,EAAUf,MAAOgB,GACjC,kBAAC,IAAD,CAAKhB,MAAM,SACX,kBAAC,IAAD,MACA,yLAUJ,kBAAC,IAAD,CAAQe,SAAUA,EAAUf,MAAOgB,GACjC,kBAAC,IAAD,CAAKhB,MAAM,SAGVsB,EAAWM,OAAS,EACnB,kBAAC,EAAD,CACE5B,MAAOsB,EAAW,GAAGG,YAAYzB,MACjCC,SAAUqB,EAAW,GAAGG,YAAYI,YACpC3B,UAAWoB,EAAW,GAAGG,YAAYvB,UACrCC,KAAMmB,EAAW,GAAGQ,OAAOC,KAC3B3B,IAAKkB,EAAW,GAAGG,YAAYrB,MAGjC,qCAGDuB,EAAYC,OAAS,EACpB,oCACE,4CACA,wBAAIpB,UAAU,wBACXmB,EAAYK,KAAI,SAAAC,GACf,OACE,4BACE,kBAAC,EAAD,CACEjC,MAAOiC,EAAKR,YAAYzB,MACxBC,SAAUgC,EAAKR,YAAYI,YAC3B3B,UAAW+B,EAAKR,YAAYvB,UAC5BC,KAAM8B,EAAKH,OAAOC,KAClB3B,IAAK6B,EAAKR,YAAYrB,YAQlC,uCAQc","file":"component---src-pages-index-js-fd2d74a591863ab54f79.js","sourcesContent":["import React from \"react\"\nimport { navigate } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PostThumb = ({ title, subtitle, thumbnail, link, tag }) => {\n  let featuredImgFluid = thumbnail.childImageSharp.fluid\n\n  return (\n    <div className=\"postthumb-container\" onClick={() => navigate(link)}>\n      <Img fluid={featuredImgFluid} />\n      <p className=\"post-tag\">#{tag}</p>\n      <p className=\"postthumb-title\">{title}</p>\n      <p className=\"postthumb-subtitle\">{subtitle}</p>\n    </div>\n  )\n}\n\nexport default PostThumb\n","import React from \"react\"\nimport { navigate } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PinnedPost = ({ title, subtitle, thumbnail, link, tag }) => {\n  let featuredImgFluid = thumbnail.childImageSharp.fluid\n\n  return (\n    <div className=\"pinnedpost-container\" onClick={() => navigate(link)}>\n      <Img fluid={featuredImgFluid} />\n      <p className=\"post-tag\">#{tag}</p>\n      <p className=\"postthumb-title\">{title}</p>\n      <p className=\"postthumb-subtitle\">{subtitle}</p>\n    </div>\n  )\n}\n\nexport default PinnedPost\n","import React from \"react\"\nimport \"@fontsource/roboto\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostThumb from \"../components/postThumb\"\nimport PinnedPost from \"../components/pinnedPost\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  const pinnedPost = posts.filter(p => p.frontmatter.pin)\n  const recentPosts = posts.filter(p => p.frontmatter.pin === false)\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Blog\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Blog\" />\n      {/* <Bio /> */}\n\n      {pinnedPost.length > 0 ? (\n        <PinnedPost\n          title={pinnedPost[0].frontmatter.title}\n          subtitle={pinnedPost[0].frontmatter.description}\n          thumbnail={pinnedPost[0].frontmatter.thumbnail}\n          link={pinnedPost[0].fields.slug}\n          tag={pinnedPost[0].frontmatter.tag}\n        />\n      ) : (\n        <></>\n      )}\n\n      {recentPosts.length > 0 ? (\n        <>\n          <h5>Recent Posts</h5>\n          <ol className=\"postthumb-wrapper-ol\">\n            {recentPosts.map(post => {\n              return (\n                <li>\n                  <PostThumb\n                    title={post.frontmatter.title}\n                    subtitle={post.frontmatter.description}\n                    thumbnail={post.frontmatter.thumbnail}\n                    link={post.fields.slug}\n                    tag={post.frontmatter.tag}\n                  />\n                </li>\n              )\n            })}\n          </ol>\n        </>\n      ) : (\n        <></>\n      )}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          tag\n          pin\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}